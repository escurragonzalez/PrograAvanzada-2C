package algoritmos;

import java.io.*;

public class Warshall {
	static int[][] warshall;
	static int n = 0;

	static BufferedReader leer = new BufferedReader(new InputStreamReader(System.in));

	public static void main(String[] args) {
		System.out.print("Ingrese n (tamaño de la matriz n X n) : ");
		try {
			n = Integer.parseInt(leer.readLine());
			warshall = new int[n][n];
			for (int i = 0; i < n; i++)
				for (int j = 0; j < n; j++) {
					System.out.println("Inserte la componente W(" + i + ")(" + j + ")");
					warshall[i][j] = Integer.parseInt(leer.readLine());
				}
		} catch (Exception e) {
		}
		
		
		for (int k = 0; k <= n - 1; k++)
			for (int i = 0; i <= n - 1; i++)
				for (int j = 0; j <= n - 1; j++)
					warshall[i][j] = fxWarshall(i, j, k);

		System.out.println("Matriz de adyacencia correspondiente: ");

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++)
				System.out.print(warshall[i][j]);
			System.out.println();
		}
	}

	public static int fxWarshall(int i, int j, int k) {
		if ((warshall[i][j] == 1) || ((warshall[i][k] == 1) && (warshall[k][j] == 1)))
			return 1;
		return 0;
	}
}